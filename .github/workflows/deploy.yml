name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: List dist contents (debug)
        run: |
          echo "=== Dist contents ==="
          ls -la dist/
          echo "=== Index.html content ==="
          head -10 dist/index.html

      - name: Clean server directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            rm -rf /var/www/mainsite/*

      - name: Upload dist files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "dist/"
          target: "/var/www/mainsite/"

      - name: Fix nginx configuration for SPA routing
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "🔧 Fixing nginx configuration for SPA routing..."
            
            # Backup current config
            sudo cp /etc/nginx/sites-available/mainsite /etc/nginx/sites-available/mainsite.backup.$(date +%Y%m%d_%H%M%S)
            
            # Create correct nginx configuration
            sudo tee /etc/nginx/sites-available/mainsite > /dev/null << 'EOF'
            server {
                listen 80;
                server_name 178.156.135.213;
            
                # Frontend (Vue.js build)
                location / {
                    root /var/www/mainsite;
                    try_files $uri $uri/ /index.html;
                    
                    # Cache static assets
                    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                        expires 1y;
                        add_header Cache-Control "public, immutable";
                    }
                }
            
                # API Backend
                location /api/ {
                    proxy_pass http://localhost:3001;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                    proxy_cache_bypass $http_upgrade;
                }
            
                # Security headers
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
            }
            EOF
            
            # Test nginx configuration
            echo "🧪 Testing nginx configuration..."
            sudo nginx -t
            
            if [ $? -eq 0 ]; then
                echo "✅ Nginx configuration is valid"
                
                # Reload nginx
                echo "🔄 Reloading nginx..."
                sudo systemctl reload nginx
                
                echo "🎉 Configuration updated successfully!"
            else
                echo "❌ Nginx configuration test failed"
                exit 1
            fi

      - name: Set permissions and reload nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            chown -R www-data:www-data /var/www/mainsite/
            chmod -R 755 /var/www/mainsite/
            systemctl reload nginx